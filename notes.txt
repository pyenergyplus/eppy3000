2021-01-19
----------

- bumpversion is not maintained
- using bump2version now.

2021-01-16
----------

- IFrame from notebook is not showing up in sphinx documentation
- documented IFrame ode commented out

2021-01-14
----------

need to get at field names of the epMunch objects. Options:

- allfilednames (will include the eppy* names) - DONE. need pytest
- epjfieldnames (all field names in the epj except the eppy* names) - DONE. need pytest
- schemafieldnames (fieldnames from the schema. Can be different from the epjfieldnames) - DONE. need pytest

-
there is a copy of epschema with every file. This a waste of memory. leave as a placeholder for now

2021-01-12
----------

use https://pypi.org/project/json2html/ to display the json. Maybe display it in jupyter notebook ?

DONE -> needs user documentation. and full docstrings

2020-07-29
----------

looks like we need a::

    class EPObject(EPMunch)
    
to deal with eppy field names. EPMunch can deal with all the objects higher in heirarchy

2020-07-26
----------

- should this be coded so that it is possible to work in the raw json or the epMunch

2020-07-21
----------

- Need a test for printmuch or the __repr__, seems very fragile - DONE for __repr__
- need tests for __setattr__ change
- specifically look for issues with 'eppy*' fields

2020-07-20
----------

Based on how eppy works:

- EPJ should have access to the model (this is EPJ.epj) - DONE
- epMunches ahould have access to model as too - DONE -> epMunch.epj = EPJ.epj
    - maybe to one level above the epmunch object
        - although EPJ.epj gives this access
        - but does epMunch have access to EPJ.epj - NO, now YES
- see comment in line 42 of eppy3000/modelmaker.py -> on how to do this

2020-07-10
----------

There seems to be a regex in the schema.epJSON

    - ".*"
    - "^.*\\S.*$"

a code snippet looks like::

    <snip>
    "ZoneCapacitanceMultiplier:ResearchSpecial": {
            "patternProperties": {
                "^.*\\S.*$": {
                    "type": "object",
     <snip>

2020-05-11
----------

added experimental folder

- figured out how to squash commits in git
    - https://www.internalpointers.com/post/squash-commits-into-one-git


2020-05-10
----------

Jupyter Notebook Tools for Sphinx

- Install nbsphinx. (pip install nbsphinx)
- Edit your conf.py and add 'nbsphinx' to extensions .
- Edit your index. rst and add the names of your ``*.`` ipynb files to the toctree .
- Run Sphinx!

2020-05-10
----------

- issue #34 fully works here
- issue #35 is hand coded into #34

- do a merge request for #35
- (#35 has to be canceled and a newly worded issue has to be opened)
- do a separate merge request for #34 after merging in #35
- this will keep it clean on the maintainer end

2020-05-09
----------

- Usage in docs still talk about IDF. It is now EPJ.
- needs to be updated
- (does it really need to be epj)

- EPJ.__repr__ is printing human readable format
- EPJ.__str__ should do that not `.__repr__`

- I need the __repr__ to work correctly now !!!! :-(
- open a new issue on this ... so that I can focus on it.



2020-04-12
----------

Maybe solution to eppy vs eppy3000 issue:

- original thought was
    - develop eppy3000 as a natural flow
    - develop eppy independently with eppy300 functionality
- new possibility
     - import eppy into eppy300
     - have connection between eppy3000 data-structure and eppy data-structure
         - so when one changes, the other changes

2019-06-06
----------

::

    python3 -m twine upload dist/*
    # remove the login details in  ~/.pypirc -> to ensure you can upload from multiple accounts


    Server response (410): This API is no longer supported, instead simply upload the file.


2019-06-02
----------

online JSON readers <https://jsoneditoronline.org>

2018-12-24
----------

release to pypi - Do it from clean machine


2018-12-15
----------

see: https://python-3-patterns-idioms-test.readthedocs.io/en/latest/index.html


2018-12-11
----------

The idf objects need following keys:

- eppykey
- eppyname
- eppylen

post process this after the read.

2018-12-10
----------

If ipython is running the wrong version of python, then:

Run hash -r

From your bash shell, run::

    hash -r

And try running iPython again.

When you've run iPython previously in a shell session, that command was cached. This command simply resets the cache. And now when you run::

    ipython

it will refer to the version of iPython that you installed in your virtual environment.



2018-12-08
----------

::

    git remote add upstream https://github.com/pyenergyplus/eppy3000.git
    git pull --rebase upstream master

- removed eppy3000 for python2
- all dev will bein python3

::

    # First time
    python3 -m venv ~/venvs/eppy3000
    python3.7 -m venv ~/venvs/eppy3000
    source ~/venvs/eppy3000/bin/activate

    # if you want to run with eppy installed:
    python3 -m venv ~/venvs/eppy3000_eppy
    python3.7 -m venv ~/venvs/eppy3000_eppy
    source ~/venvs/eppy3000_eppy/bin/activate

    # if you want to test with eppy installed no jupyter  notebook:
    python3 -m venv ~/venvs/eppy3000_eppy_nojupyter
    python3.7 -m venv ~/venvs/eppy3000_eppy_nojupyter
    source ~/venvs/eppy3000_eppy_nojupyter/bin/activate

2018-10-15
----------

::

    mkvirtualenv --python=python2 eppy3000
    git push https://'pyenergyplus':'B_password'@github.com/pyenergyplus/eppy3000.git
